@import url('https://fonts.googleapis.com/css2?family=Roboto&display=swap');


html {
    box-sizing: border-box;
}
*, *:before, *:after {
    box-sizing: inherit;
}

html {
    color: $secondary_color;
    font-family: 'Roboto', sans-serif;
}

body {
    background-color: $primary_color;
    @include reset(0);
    opacity: 1;
}
h1,h2,h3,h4 {
    @include headingStyle();
}


header{ 
    background-color: $accent;
    @include reset(0);
    h1 {
        text-align: center;
    }
}

#wrapper {
    background-color: $secondary_color;
    color: $primary_color;
    @include reset(0);
    display: flex;
    flex-direction: column;
    max-width: 90%;
    margin: 0 auto;
    min-height: 100vh;

    main{
        flex: 1;
        display: flex;
        flex-direction: column;

        h2{
            padding-left: 16px;
            font-size: 32px;
        }

        #game {
            display: grid;
            grid-template-areas:
            "game-heading   game-heading"
            "buttons        buttons"
            "p1section      p2section";
            grid-template-columns: repeat(2, 1fr);
            grid-template-rows: repeat(2, 60px) 1fr;
            gap: 16px;
        

            #buttons{
                button {
                    margin: 0 50px;
                }
            }

            section {
                border: solid 5px $accent2;
                border-radius: 15px;
                padding: 16px;

                .score{
                    font-weight: bold;
                }

            }

        }
    }

    footer {
        background-color: $accent2;
        color: $primary_color;
        padding: 15px 38%;
    }
}

h3, .rules{
    padding: 16px 0 0 16px;
}
li {
    padding-bottom: 16px;
}

// =======================================================
// GRID LAYOUT

.game-heading{
    @include gridComponentSetup(game-heading);
    justify-self: center;
}

.btn-contaner{
    @include gridComponentSetup(buttons);
    justify-self: center;
}

.section-p1{
    @include gridComponentSetup(p1section);
    justify-self: center;
}

.section-p2{
    @include gridComponentSetup(p2section);
    justify-self: center;
}


// =======================================================
// BUTTON STYLING & PSEUDOCLASSES


h2 {
    text-align: center;
}

#btn-roll, #btn-ok{
    @include buttonStyle($accent);
}
#btn-roll:hover, #btn-ok:hover {
    @include buttonHover($accent);
}
#btn-roll:active, #btn-ok:active {
    @include buttonActive($accent);
}
#btn-new {
    @include buttonStyle($exit_color);
}
#btn-new:hover {
    @include buttonHover($exit_color);
}
#btn-new:active {
    @include buttonActive($exit_color);
}


img {
    width: $diceSize;
    height: $diceSize;
}

.icon {
    float: left;
    width: 75px;
    height: 75px;
    border-radius: 50%;
    @include borderStyle();
}

h4 {
    margin-left: 55px;
    background-color: $accent2;
}


#pop-up {
    background-color: $accent2;
    color: black;
    width: 300px;
    padding:10px;
    border-radius: 10px;
    border: solid 1px black;
    box-shadow: 5px 5px 5px black;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    opacity: 0;
    pointer-events: none;
}

#btn-close{
    position: absolute;
    top: 10px;
    right: 10px;
    font-weight: bold;
    border: solid 2px $exit_color;
    color: $exit_color;
}

#btn-close, #btn-ok {
    cursor: pointer;
    pointer-events: all;
}